import{_ as e,r as o,o as c,c as i,b as n,d as t,a as p,e as s}from"./app.7106ea3d.js";const l={},u=p(`<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> Javascript</h1><blockquote><p>\u9762\u8BD5 Javascript \u65B9\u9762\u7684\u4E00\u4E9B\u95EE\u9898\uFF0C\u6216\u8005\u4ECB\u7ECD\uFF0C\u6301\u7EED\u66F4\u65B0</p></blockquote><h2 id="_1-js-\u7684\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-js-\u7684\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> 1.JS \u7684\u6570\u636E\u7C7B\u578B</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>String<span class="token punctuation">;</span>
Number<span class="token punctuation">;</span>
Boolean<span class="token punctuation">;</span>
Undefined<span class="token punctuation">;</span>
BigInt<span class="token punctuation">;</span>
Symbol<span class="token punctuation">;</span>
<span class="token keyword">null</span><span class="token punctuation">;</span>
Object<span class="token punctuation">;</span>
Function<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#_2-\u4F5C\u7528\u57DF" aria-hidden="true">#</a> 2.\u4F5C\u7528\u57DF</h2>`,5),r={href:"https://juejin.cn/post/6957913856488243237",target:"_blank",rel:"noopener noreferrer"},k=s("JavaScript \u7684\u9759\u6001\u4F5C\u7528\u57DF\u94FE\u4E0E\u201C\u52A8\u6001\u201D\u95ED\u5305\u94FE"),d=n("p",null,"ECMAScript \u53D8\u91CF\u53EF\u4EE5\u5305\u542B\u4E24\u79CD\u4E0D\u540C\u7C7B\u578B\u7684\u6570\u636E\uFF1A\u539F\u59CB\u503C\u548C\u5F15\u7528\u503C\u3002",-1),v=n("p",null,"\u539F\u59CB\u503C\uFF08primitive value\uFF09\u5C31\u662F\u6700\u7B80\u5355\u7684\u6570\u636E",-1),m=n("p",null,"\u5F15\u7528\u503C\uFF08reference value\uFF09\u5219\u662F\u7531\u591A\u4E2A\u503C\u6784\u6210\u7684\u5BF9\u8C61\u3002\u5728\u628A\u4E00\u4E2A\u503C\u8D4B\u7ED9\u53D8\u91CF\u65F6\uFF0CJavaScript \u5F15\u64CE\u5FC5\u987B\u786E\u5B9A\u8FD9\u4E2A\u503C\u662F\u539F\u59CB\u503C\u8FD8\u662F\u5F15\u7528\u503C\u3002\u5F15\u7528\u503C\u662F\u4FDD\u5B58\u5728\u5185\u5B58\u4E2D\u7684\u5BF9\u8C61\u3002\u4E0E\u5176\u4ED6\u8BED\u8A00\u4E0D\u540C\uFF0CJavaScript \u4E0D\u5141\u8BB8\u76F4\u63A5\u8BBF\u95EE\u5185\u5B58\u4F4D\u7F6E\uFF0C\u56E0\u6B64\u4E5F\u5C31\u4E0D\u80FD\u76F4\u63A5\u64CD\u4F5C\u5BF9\u8C61\u6240\u5728\u7684\u5185\u5B58\u7A7A\u95F4\u3002\u5728\u64CD\u4F5C\u5BF9\u8C61\u65F6\uFF0C\u5B9E\u9645\u4E0A\u64CD\u4F5C\u7684\u662F\u5BF9\u8BE5\u5BF9\u8C61\u7684\u5F15\u7528\uFF08reference\uFF09\u800C\u975E \u5B9E\u9645\u7684\u5BF9\u8C61\u672C\u8EAB\u3002\u4E3A\u6B64\uFF0C\u4FDD\u5B58\u5F15\u7528\u503C\u7684\u53D8\u91CF\u662F\u6309\u5F15\u7528\uFF08by reference\uFF09\u8BBF\u95EE\u7684\u3002",-1),b=n("p",null,[n("code",null,"JavaScript\u91C7\u7528\u7684\u662F\u8BCD\u6CD5\u4F5C\u7528\u57DF\uFF0C\u51FD\u6570\u7684\u4F5C\u7528\u57DF\u57FA\u4E8E\u51FD\u6570\u521B\u5EFA\u7684\u4F4D\u7F6E\u3002")],-1),h=n("h2",{id:"_3-\u539F\u578B\u3001\u539F\u578B\u94FE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-\u539F\u578B\u3001\u539F\u578B\u94FE","aria-hidden":"true"},"#"),s(" 3.\u539F\u578B\u3001\u539F\u578B\u94FE")],-1),f={href:"https://github.com/mqyqingfeng/Blog/issues/2",target:"_blank",rel:"noopener noreferrer"},y=s("JavaScript \u6DF1\u5165\u4E4B\u4ECE\u539F\u578B\u5230\u539F\u578B\u94FE"),g=p(`<p>\u5173\u4E8E\u539F\u578B\u94FE\uFF0C\u6211\u5C31\u4E0D\u91CD\u590D\u4E86\uFF0C\u6709\u5F88\u591A\u603B\u7ED3\u7684\u6587\u7AE0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>xxx
\u521B\u5EFA\u7684<span class="token keyword">function</span>\u901A\u8FC7\u539F\u578B\u94FE\uFF0C\u5C31\u80FD\u83B7\u53D6\u5230\u539F\u578B\u4E0A\u7684\u65B9\u6CD5

<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>xxx
\u521B\u5EFA\u7684object\u901A\u8FC7\u539F\u578B\u94FE\uFF0C\u5C31\u80FD\u83B7\u53D6\u5230\u539F\u578B\u4E0A\u7684\u65B9\u6CD5

xxx<span class="token punctuation">.</span>__proto__ <span class="token operator">==</span> <span class="token class-name">Xxx</span><span class="token punctuation">.</span>prototype
xxx<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">==</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>xxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u53D8\u91CF\u58F0\u660E\u548C\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_4-\u53D8\u91CF\u58F0\u660E\u548C\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> 4.\u53D8\u91CF\u58F0\u660E\u548C\u51FD\u6570\u58F0\u660E</h2>`,3),_={href:"https://github.com/mqyqingfeng/Blog/issues/4",target:"_blank",rel:"noopener noreferrer"},w=s("JavaScript \u6DF1\u5165\u4E4B\u6267\u884C\u4E0A\u4E0B\u6587\u6808"),j={href:"https://zhuanlan.zhihu.com/p/100563316",target:"_blank",rel:"noopener noreferrer"},x=s("\u6D45\u8C08 JS \u53D8\u91CF\u63D0\u5347"),q=p(`<ul><li><p>\u51FD\u6570\u63D0\u5347\u4F18\u5148\u7EA7\u9AD8\u4E8E\u53D8\u91CF\u63D0\u5347</p></li><li><p>\u5F53\u51FD\u6570\u58F0\u660E\u4E0E\u53D8\u91CF\u540D\u76F8\u540C\u65F6\uFF0C\u5728\u53D8\u91CF\u8D4B\u503C\u524D\uFF0C\u51FD\u6570\u58F0\u660E\u4F9D\u65E7\u662F\u51FD\u6570\u58F0\u660E\uFF0C\u4E0D\u4F1A\u88AB\u8986\u76D6\uFF0C\u5F53\u53D8\u91CF\u8D4B\u503C\u540E\uFF0C\u51FD\u6570\u58F0\u660E\u88AB\u540C\u53D8\u91CF\u8986\u76D6</p><p>1.\u7B2C\u4E00\u4E2A\u793A\u4F8B</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
a <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B54\u6848</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;function&quot;</span><span class="token punctuation">;</span>

<span class="token string">&quot;function&quot;</span><span class="token punctuation">;</span>

<span class="token string">&quot;number&quot;</span><span class="token punctuation">;</span>

<span class="token string">&quot;a is not a function&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.\u7B2C\u4E8C\u4E2A\u793A\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    f <span class="token operator">=</span> a<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;undefined&quot;</span><span class="token punctuation">;</span>

<span class="token string">&quot;undefined&quot;</span><span class="token punctuation">;</span>

<span class="token string">&quot;function&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u4EE3\u7801\u5757\u4E2D\uFF0C\u53EA\u6709\u4F7F\u7528 var \u58F0\u660E\u7684\u53D8\u91CF\u548C\u51FD\u6570\u58F0\u660E\u662F\u53EF\u4EE5\u63D0\u5347\u7684\uFF0C\u4F46\u662F\u51FD\u6570\u58F0\u660E\u53EA\u80FD\u5C06\u51FD\u6570\u7684\u540D\u5B57\u63D0\u5347\u51FA\u53BB</p><p>3.\u7B2C\u4E09\u4E2A\u793A\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//function</span>
  <span class="token comment">// var f = 3;</span>
  f <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">s</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//function</span>
  <span class="token comment">// var s = 3;</span>
  s <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//function</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 f \u662F\u5177\u540D\u51FD\u6570\uFF0C\u51FD\u6570 s \u662F\u51FD\u6570\u8868\u8FBE\u5F0F\u3002\u5177\u540D\u51FD\u6570\u4E2D\uFF0C\u53EF\u4EE5\u5728\u51FD\u6570\u5185\u90E8\u6539\u53D8\u51FD\u6570\u540D\uFF0C\u800C\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C\u5982\u679C\u6709\u51FD\u6570\u540D\uFF0C\u5219\u5B83\u7684\u51FD\u6570\u540D\u53EA\u80FD\u4F5C\u7528\u5728\u5176\u81EA\u8EAB\u4F5C\u7528\u57DF\u4E2D\uFF0C\u4E14\u4E0D\u53EF\u6539\u53D8\u6539\u53D8\u51FD\u6570\u540D\u3002</p>`,11),S=s("\u4EE5\u4E0A\u7684\u4EE3\u7801\u662F copy \u81EA"),J={href:"https://zhuanlan.zhihu.com/p/100563316",target:"_blank",rel:"noopener noreferrer"},O=s("\u6D45\u8C08 JS \u53D8\u91CF\u63D0\u5347"),A=n("h2",{id:"_5-promise-\u5B9E\u73B0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-promise-\u5B9E\u73B0","aria-hidden":"true"},"#"),s(" 5.Promise \u5B9E\u73B0")],-1),B={href:"https://juejin.cn/post/6844904096525189128#heading-1",target:"_blank",rel:"noopener noreferrer"},N=s("9k \u5B57 | Promise/async/Generator \u5B9E\u73B0\u539F\u7406\u89E3\u6790"),F=n("h2",{id:"_6-js-\u8BBE\u8BA1\u6A21\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6-js-\u8BBE\u8BA1\u6A21\u5F0F","aria-hidden":"true"},"#"),s(" 6.js - \u8BBE\u8BA1\u6A21\u5F0F")],-1),C={href:"https://juejin.cn/post/6844904032826294286",target:"_blank",rel:"noopener noreferrer"},z=s("JavaScript \u8BBE\u8BA1\u6A21\u5F0F es6\uFF0823 \u79CD"),P={href:"https://www.cnblogs.com/cc-freiheit/p/11356073.html",target:"_blank",rel:"noopener noreferrer"},E=s("js - \u89C2\u5BDF\u8005\u6A21\u5F0F\u4E0E\u8BA2\u9605\u53D1\u5E03\u6A21\u5F0F"),L=n("h2",{id:"_7-\u865A\u62DF-dom",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_7-\u865A\u62DF-dom","aria-hidden":"true"},"#"),s(" 7.\u865A\u62DF DOM")],-1),I={href:"https://juejin.cn/post/6990582632270528525?from=main_page",target:"_blank",rel:"noopener noreferrer"},T=s("\u4ECE\u4E86\u89E3\u5230\u6DF1\u5165\u865A\u62DF DOM \u548C\u5B9E\u73B0 diff \u7B97\u6CD5"),V=p(`<h2 id="_8-\u624B\u5199-call\u3001apply\u3001bind-\u539F\u7406\u57FA\u7840\u7248" tabindex="-1"><a class="header-anchor" href="#_8-\u624B\u5199-call\u3001apply\u3001bind-\u539F\u7406\u57FA\u7840\u7248" aria-hidden="true">#</a> 8.\u624B\u5199 call\u3001apply\u3001bind \u539F\u7406\u57FA\u7840\u7248</h2><p>1.call</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myCall</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> <span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ctx<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token parameter">c<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">-</span> c <span class="token operator">-</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">-</span> c <span class="token operator">-</span> d<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;abc.myCall(obj, 1, 5)&quot;</span><span class="token punctuation">,</span> abc<span class="token punctuation">.</span><span class="token function">myCall</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// - 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.apply</p><p>apply \u548C call \u7C7B\u4F3C\u7684\uFF0C\u53EA\u4E0D\u8FC7\u4F20\u53C2\u4E0D\u4E00\u6837\uFF0C apply \u8FD9\u91CC\u81EA\u5DF1\u521D\u5B66 js \u65F6\u7559\u8FC7\u4E00\u4E2A\u5751\uFF0C\u81EA\u5DF1\u6CA1\u770B\u6E05 api \u4ECB\u7ECD\uFF0C\u4EE5\u4E3A\u88AB apply \u540E\u7684\u51FD\u6570\uFF0C\u63A5\u53D7\u4E5F\u5FC5\u987B\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u540E\u6765\u610F\u8BC6\u5230\u81EA\u5DF1\u5F53\u65F6\u6709\u591A\u7C97\u5FC3</p><p>apply \u7B2C\u4E8C\u4E2A\u53C2\u6570\u53EF\u4EE5\u4E3A arguments</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ctx<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token parameter">c<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">-</span> c <span class="token operator">-</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">-</span> c <span class="token operator">-</span> d<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;abc.myApply(obj, 1, 5)&quot;</span><span class="token punctuation">,</span> abc<span class="token punctuation">.</span><span class="token function">myApply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// - 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.bind</p><p>bind \u548C call \u63A5\u53D7\u53C2\u6570\u662F\u4E00\u6837\u7684\uFF0C\u53EA\u4E0D\u8FC7\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u901A\u8FC7\u8FD4\u56DE\u51FD\u6570\u6267\u884C call \u6216\u8005 apply</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> <span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7ED3\u5408\u4E0A\u9762\u7684apply\u65B9\u6CD5</span>
    <span class="token keyword">return</span> that<span class="token punctuation">.</span><span class="token function">myApply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;abc.myBind(obj, 1, 5)&quot;</span><span class="token punctuation">,</span> abc<span class="token punctuation">.</span><span class="token function">myBind</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// - 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-\u624B\u5199\u7B80\u7248-new" tabindex="-1"><a class="header-anchor" href="#_9-\u624B\u5199\u7B80\u7248-new" aria-hidden="true">#</a> 9. \u624B\u5199\u7B80\u7248 new</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> Fn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  obj<span class="token punctuation">.</span>_proto_ <span class="token operator">=</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">Fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">?</span> res <span class="token operator">:</span> obj<span class="token punctuation">;</span> <span class="token comment">//\u786E\u4FDD\u6784\u9020\u5668\u603B\u662F\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-\u8282\u6D41\u548C\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#_10-\u8282\u6D41\u548C\u9632\u6296" aria-hidden="true">#</a> 10.\u8282\u6D41\u548C\u9632\u6296</h2><p>1.\u9632\u6296</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fb<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> timeout<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fb</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>that<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.\u8282\u6D41</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> timeout<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>that<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> previous <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> arguments<span class="token punctuation">;</span>
    <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>that<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      previous <span class="token operator">=</span> now<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-\u6D45\u62F7\u8D1D\u548C\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#_11-\u6D45\u62F7\u8D1D\u548C\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> 11.\u6D45\u62F7\u8D1D\u548C\u6DF1\u62F7\u8D1D</h2><p>\u6D45\u62F7\u8D1D\u548C\u6DF1\u62F7\u8D1D\u4E3B\u8981\u662F\u5BF9\u5F15\u7528\u7684\u8003\u5BDF</p><p>1.\u6D45\u62F7\u8D1D</p><ul><li><p>Object.assign()</p></li><li><p>Array.prototype.concat()</p></li><li><p>...\u5C55\u5F00\u5F17</p><p>2.\u6DF1\u62F7\u8D1D</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
\u8FD9\u4E2A\u662F\u6700\u7B80\u5355\u7684\uFF0C\u4F46\u662F\u5F0A\u7AEF
\u62F7\u8D1D\u5176\u4ED6\u5F15\u7528\u7C7B\u578B\u3001\u62F7\u8D1D\u51FD\u6570\u3001\u5FAA\u73AF\u5F15\u7528\u7B49\u4E00\u4E9B\u7F3A\u9677
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> newObj <span class="token operator">=</span> obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span>
        <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">?</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newObj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),D={href:"https://github.com/mqyqingfeng/Blog/issues/32",target:"_blank",rel:"noopener noreferrer"},M=s("JavaScript \u4E13\u9898\u4E4B\u6DF1\u6D45\u62F7\u8D1D"),R=p(`<h2 id="_12-\u5B9E\u73B0-json-parse" tabindex="-1"><a class="header-anchor" href="#_12-\u5B9E\u73B0-json-parse" aria-hidden="true">#</a> 12.\u5B9E\u73B0 JSON.parse</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token parameter">jsonStr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> jsonStr <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-\u6570\u7EC4\u6392\u5E8F\u3001\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#_13-\u6570\u7EC4\u6392\u5E8F\u3001\u53BB\u91CD" aria-hidden="true">#</a> 13.\u6570\u7EC4\u6392\u5E8F\u3001\u53BB\u91CD</h2><p>1.\u6392\u5E8F</p>`,4),G={href:"https://juejin.cn/post/6844903444365443080",target:"_blank",rel:"noopener noreferrer"},U=s("\u5341\u5927\u7ECF\u5178\u6392\u5E8F\u7B97\u6CD5\u603B\u7ED3"),X=p(`<p>2.\u53BB\u91CD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1.</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token number">2.</span> \u7C7B\u4F3Cindexof\u5224\u65AD\u662F\u5426\u6709\uFF0C\u65E0\u5C31\u6DFB\u52A0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_14-\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#_14-\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> 14.\u6570\u7EC4\u6241\u5E73\u5316</h2><p>\u9012\u5F52\u7684\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newArr <span class="token operator">=</span> newArr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flat</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>toString</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>es6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_15-instanceof-\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_15-instanceof-\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 15.instanceof \u7684\u5B9E\u73B0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">instance_of</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">R</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token constant">O</span> <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token constant">P</span> <span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant">O</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">O</span> <span class="token operator">===</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token constant">O</span> <span class="token operator">=</span> <span class="token constant">O</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16-jsonp-\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_16-jsonp-\u7684\u539F\u7406" aria-hidden="true">#</a> 16.JsonP \u7684\u539F\u7406</h2>`,12),H={href:"https://zhuanlan.zhihu.com/p/344632485",target:"_blank",rel:"noopener noreferrer"},K=s("JavaScript \u8DE8\u57DF\u8BF7\u6C42 jsonp \u539F\u7406"),Q=n("h2",{id:"_17-\u4E8B\u4EF6\u673A\u5236-event-loop",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_17-\u4E8B\u4EF6\u673A\u5236-event-loop","aria-hidden":"true"},"#"),s(" 17.\u4E8B\u4EF6\u673A\u5236/Event Loop")],-1),W={href:"https://github.com/aooy/blog/issues/5",target:"_blank",rel:"noopener noreferrer"},Y=s("\u4ECE event loop \u89C4\u8303\u63A2\u7A76 javaScript \u5F02\u6B65\u53CA\u6D4F\u89C8\u5668\u66F4\u65B0\u6E32\u67D3\u65F6\u673A"),Z={href:"https://juejin.cn/post/6844903512845860872#comment",target:"_blank",rel:"noopener noreferrer"},$=s("\u8FD9\u4E00\u6B21\uFF0C\u5F7B\u5E95\u5F04\u61C2 JavaScript \u6267\u884C\u673A\u5236"),nn=n("h2",{id:"_18-\u9759\u6001\u4F5C\u7528\u57DF\u4E0E\u52A8\u6001\u4F5C\u7528\u57DF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_18-\u9759\u6001\u4F5C\u7528\u57DF\u4E0E\u52A8\u6001\u4F5C\u7528\u57DF","aria-hidden":"true"},"#"),s(" 18.\u9759\u6001\u4F5C\u7528\u57DF\u4E0E\u52A8\u6001\u4F5C\u7528\u57DF")],-1),sn=n("ul",null,[n("li",null,"\u56E0\u4E3A JavaScript \u91C7\u7528\u7684\u662F\u8BCD\u6CD5\u4F5C\u7528\u57DF\uFF0C\u51FD\u6570\u7684\u4F5C\u7528\u57DF\u5728\u51FD\u6570\u5B9A\u4E49\u7684\u65F6\u5019\u5C31\u51B3\u5B9A\u4E86"),n("li",null,"\u800C\u4E0E\u8BCD\u6CD5\u4F5C\u7528\u57DF\u76F8\u5BF9\u7684\u662F\u52A8\u6001\u4F5C\u7528\u57DF\uFF0C\u51FD\u6570\u7684\u4F5C\u7528\u57DF\u662F\u5728\u51FD\u6570\u8C03\u7528\u7684\u65F6\u5019\u624D\u51B3\u5B9A\u7684")],-1);function an(tn,pn){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[n("a",r,[k,t(a)])]),d,v,m,b,h,n("p",null,[n("a",f,[y,t(a)])]),g,n("p",null,[n("a",_,[w,t(a)])]),n("p",null,[n("a",j,[x,t(a)])]),q,n("p",null,[S,n("a",J,[O,t(a)])]),A,n("p",null,[n("a",B,[N,t(a)])]),F,n("p",null,[n("a",C,[z,t(a)])]),n("p",null,[n("a",P,[E,t(a)])]),L,n("p",null,[n("a",I,[T,t(a)])]),V,n("p",null,[n("a",D,[M,t(a)])]),R,n("p",null,[n("a",G,[U,t(a)])]),X,n("p",null,[n("a",H,[K,t(a)])]),Q,n("p",null,[n("a",W,[Y,t(a)])]),n("p",null,[n("a",Z,[$,t(a)])]),nn,sn])}var on=e(l,[["render",an],["__file","basis.html.vue"]]);export{on as default};
